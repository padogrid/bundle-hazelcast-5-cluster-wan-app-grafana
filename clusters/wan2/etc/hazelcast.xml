<?xml version="1.0" encoding="UTF-8"?>

<!--
# ========================================================================
# Copyright (c) 2020-2023 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================
-->

<!--******************************************************************************* 

IMPORTANT:

   padogrid depends on several system properties, which must be specified
   in your hazelcast.xml. If you choose to use your own hazelcast.xml file then
   make sure to include all system properties found in this file. The following
   system properties are required: 
   
		"hazelcast-addon.cluster-name"
		         Cluster name. Disabled by default. Hard coded: "dev".
		         See below to see how to enable it. 
		"hazelcast-addon.management-center" 
		         MC URL.
		"hazelcast-addon.tcp.port"
		         TPC port number for the member.
		"hazelcast-addon.tcp.members"
		         A complete list of TCP member addresses.
		
******************************************************************************* -->

<hazelcast xmlns="http://www.hazelcast.com/schema/config"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.hazelcast.com/schema/config http://www.hazelcast.com/schema/config/hazelcast-config-5.0.xsd">

   <properties>
      <property name="hazelcast.phone.home.enabled">false</property>
      <!-- tag is optional. It is used to prefix log messages. Default: IpDisocveryService -->
      <property name="hazelcast.addon.ipdiscoveryservice.tag">WanDiscovery-global</property>
      <!-- If service-enabled=true then a dedicated thread periodically probes
        all the target endpoints at the startup time. Default: true -->
      <property name="hazelcast.addon.ipdiscoveryservice.service-enabled">true</property>
      <property name="hazelcast.addon.ipdiscoveryservice.service-delay-in-msec">30000</property>
      <property name="hazelcast.addon.ipdiscoveryservice.connection-timeout-in-msec">200</property>
      <property name="hazelcast.addon.ipdiscoveryservice.read-timeout-in-msec">200</property>
      <property name="hazelcast.addon.ipdiscoveryservice.jmx-use-hazelcast-object-name">true</property>
   </properties>
   <listeners>
      <!-- IpDiscoveryInitializer is invoked during bootstrap to eagerly conducts
      IP probing. Without the initializer, the probing is done lazily when the
      first write operation is detected. -->
      <listener>
         org.hazelcast.addon.spi.discovery.IpDiscoveryStartupInitializer
      </listener>
   </listeners>

   <!-- Enable jet (required for SQL) -->
   <jet enabled="true" resource-upload-enabled="true">
   </jet>

   <cluster-name>${hazelcast-addon.cluster-name}</cluster-name>

   <management-center scripting-enabled="true" />

   <user-code-deployment enabled="true">
      <class-cache-mode>ETERNAL</class-cache-mode>
      <provider-mode>LOCAL_AND_CACHED_CLASSES</provider-mode>
   </user-code-deployment>

   <network>
      <port auto-increment="false">${hazelcast-addon.tcp.port}</port>
      <outbound-ports>
         <ports>0</ports>
      </outbound-ports>
      <rest-api enabled="true">
         <endpoint-group name="HEALTH_CHECK" enabled="true" />
         <endpoint-group name="CLUSTER_READ" enabled="true" />
         <endpoint-group name="CLUSTER_WRITE" enabled="true" />
         <endpoint-group name="DATA" enabled="true" />
         <endpoint-group name="HOT_RESTART" enabled="true" />
         <endpoint-group name="WAN" enabled="true" />
         <endpoint-group name="CP" enabled="true" />
      </rest-api>
      <join>
         <multicast enabled="false"></multicast>
         <tcp-ip enabled="true">
            <members>${hazelcast-addon.tcp.members}</members>
         </tcp-ip>
      </join>
      <ssl enabled="false" />
      <socket-interceptor enabled="false" />
   </network>

   <native-memory enabled="true">
		<size unit="MEGABYTES" value="512" />
	</native-memory>

   <map name="nmap*">
		<in-memory-format>NATIVE</in-memory-format>
		<eviction eviction-policy="LRU" max-size-policy="FREE_NATIVE_MEMORY_PERCENTAGE" size="20" />
		<per-entry-stats-enabled>true</per-entry-stats-enabled>
		<merkle-tree enabled="true">
			<depth>10</depth>
		</merkle-tree>
		<wan-replication-ref name="to-wan1-custom">
			<merge-policy-class-name>LatestUpdateMergePolicy</merge-policy-class-name>
		</wan-replication-ref>
	</map>

   <map name="map*">
      <max-idle-seconds>120</max-idle-seconds>
		<near-cache>
			<max-idle-seconds>120</max-idle-seconds>
		</near-cache>
      <per-entry-stats-enabled>true</per-entry-stats-enabled>
      <wan-replication-ref name="to-wan1-maps">
         <merge-policy-class-name>LatestUpdateMergePolicy</merge-policy-class-name>
      </wan-replication-ref>
   </map>
   <map name="eligibility">
      <per-entry-stats-enabled>true</per-entry-stats-enabled>
      <wan-replication-ref name="to-wan1-tx">
         <merge-policy-class-name>LatestUpdateMergePolicy</merge-policy-class-name>
      </wan-replication-ref>
   </map>
   <map name="profile">
      <per-entry-stats-enabled>true</per-entry-stats-enabled>
      <wan-replication-ref name="to-wan1-tx">
         <merge-policy-class-name>LatestUpdateMergePolicy</merge-policy-class-name>
      </wan-replication-ref>
   </map>
   <map name="summary">
      <per-entry-stats-enabled>true</per-entry-stats-enabled>
      <wan-replication-ref name="to-wan1-tx">
         <merge-policy-class-name>LatestUpdateMergePolicy</merge-policy-class-name>
      </wan-replication-ref>
   </map>

   <!-- Indexes for nw data -->
   <map name="nw/customers">
      <indexes>
         <index name="country">
            <attributes>
               <attribute>country</attribute>
            </attributes>
         </index>
      </indexes>
      <near-cache name="customers">
         <max-idle-seconds>120</max-idle-seconds>
      </near-cache>
   </map>
   <map name="nw/orders">
      <indexes>
         <index name="freight">
            <attributes>
               <attribute>freight</attribute>
            </attributes>
         </index>
         <index name="shipvia" type="BITMAP">
            <attributes>
               <attribute>shipVia</attribute>
            </attributes>
         </index>
      </indexes>
      <near-cache name="orders">
         <max-idle-seconds>120</max-idle-seconds>
      </near-cache>
   </map>

   <map name="mk*">
      <eviction eviction-policy="LRU" max-size-policy="FREE_HEAP_PERCENTAGE" size="20" />
      <!-- 5 min idle time -->
      <max-idle-seconds>300</max-idle-seconds>
      <merkle-tree enabled="true">
         <depth>10</depth>
      </merkle-tree>
      <wan-replication-ref name="to-wan1-custom">
         <merge-policy-class-name>LatestUpdateMergePolicy</merge-policy-class-name>
      </wan-replication-ref>
      <per-entry-stats-enabled>true</per-entry-stats-enabled>
   </map>

   <wan-replication name="to-wan1-maps">
      <batch-publisher>
         <cluster-name>wan1</cluster-name>
			<publisher-id>maps</publisher-id>
			<target-endpoints>localhost:6001,localhost:6002,localhost:6003</target-endpoints>
      </batch-publisher>
   </wan-replication>

   <wan-replication name="to-wan1-tx">
      <batch-publisher>
         <cluster-name>wan1</cluster-name>
			<publisher-id>transactions</publisher-id>
			<target-endpoints>localhost:6001,localhost:6002,localhost:6003</target-endpoints>
      </batch-publisher>
   </wan-replication>

   <wan-replication name="to-wan1-custom">
      <batch-publisher>
         <cluster-name>wan1</cluster-name>
         <publisher-id>custom1</publisher-id>
         <batch-size>1000</batch-size>
         <queue-capacity>100000</queue-capacity>
         <batch-max-delay-millis>1000</batch-max-delay-millis>
         <max-concurrent-invocations>12</max-concurrent-invocations>
         <queue-full-behavior>DISCARD_AFTER_MUTATION</queue-full-behavior>
         <acknowledge-type>ACK_ON_RECEIPT</acknowledge-type>
         <response-timeout-millis>60000</response-timeout-millis>
         <sync>
            <consistency-check-strategy>MERKLE_TREES</consistency-check-strategy>
         </sync>
         <discovery-strategies>
            <discovery-strategy enabled="true"
               class="org.hazelcast.addon.spi.discovery.IpDiscoveryStrategy">
               <properties>
                  <!-- tag is used as log prefix and is a part of JMX metric name -->
                  <property name="tag">WanDiscovery-mk</property>
                  <property name="target-endpoints">localhost:6001,localhost:6002,localhost:6002,localhost:6003,localhost:6004</property>
                  <property name="probe-type">socket</property>
                  <!-- If service-enabled=true, then the probing is done in the dedicated thread.
                            else if service-enabled=false then the probing is done in the Hazelcast
                            discovery thread.  Default is false -->
                  <property name="service-enabled">true</property>
                  <!-- service-delay-in-msec applies only if service-enabled=true.
                            If multiple strategies are listed then the first one configured
                            overrides others. -->
                  <property name="service-delay-in-msec">30000</property>
                  <!-- connection-timout-in-msec applies only if service-enabled=false -->
                  <property name="connection-timeout-in-msec">200</property>
                  <!-- read-timeout-in-msec only if service-enabled=false -->
                  <property name="read-timeout-in-msec">200</property>
               </properties>
            </discovery-strategy>
         </discovery-strategies>
      </batch-publisher>
      <batch-publisher>
         <cluster-name>wan1</cluster-name>
         <publisher-id>custom2</publisher-id>
         <batch-size>1000</batch-size>
         <queue-capacity>100000</queue-capacity>
         <batch-max-delay-millis>1000</batch-max-delay-millis>
         <max-concurrent-invocations>12</max-concurrent-invocations>
         <queue-full-behavior>DISCARD_AFTER_MUTATION</queue-full-behavior>
         <acknowledge-type>ACK_ON_RECEIPT</acknowledge-type>
         <response-timeout-millis>60000</response-timeout-millis>
         <sync>
            <consistency-check-strategy>MERKLE_TREES</consistency-check-strategy>
         </sync>
         <discovery-strategies>
            <discovery-strategy enabled="true"
               class="org.hazelcast.addon.spi.discovery.IpDiscoveryStrategy">
               <properties>
                  <!-- tag is used as log prefix and is a part of JMX metric name -->
                  <property name="tag">WanDiscovery-nmap</property>
                  <property name="target-endpoints">localhost:6001,localhost:6002,localhost:6002,localhost:6003,localhost:6004,localhost:6005,localhost:6006,localhost:6007,localhost:6008,localhost:6009,localhost:6010</property>
                  <property name="probe-type">socket</property>
                  <!-- If service-enabled=true, then the probing is done in the dedicated thread.
                            else if service-enabled=false then the probing is done in the Hazelcast
                            discovery thread.  Default is false -->
                  <property name="service-enabled">true</property>
                  <!-- service-delay-in-msec applies only if service-enabled=true.
                            If multiple strategies are listed then the first one configured
                            overrides others. -->
                  <property name="service-delay-in-msec">30000</property>
                  <!-- connection-timout-in-msec applies only if service-enabled=false -->
                  <property name="connection-timeout-in-msec">200</property>
                  <!-- read-timeout-in-msec only if service-enabled=false -->
                  <property name="read-timeout-in-msec">200</property>
               </properties>
            </discovery-strategy>
         </discovery-strategies>
      </batch-publisher>
   </wan-replication>


   <executor-service name="hz:query">
      <pool-size>16</pool-size>
      <!--Queue
      capacity. 0 means Integer.MAX_VALUE. -->
      <queue-capacity>0</queue-capacity>
   </executor-service>

   <!-- padogrid serialization -->
   <serialization>
      <portable-version>1</portable-version>
      <portable-factories>
         <portable-factory factory-id="10000">
			org.hazelcast.addon.hql.impl.PortableFactoryImpl
			</portable-factory>
         <portable-factory factory-id="1">
             org.hazelcast.demo.nw.data.PortableFactoryImpl
         </portable-factory>
      </portable-factories>
   </serialization>

   <cp-subsystem>
      <base-dir>${hazelcast-addon.cp.base-dir}</base-dir>
      <cp-member-count>3</cp-member-count>
      <group-size>3</group-size>
      <persistence-enabled>true</persistence-enabled>
      <semaphores>
         <semaphore>
            <name>semaphore1</name>
            <initial-permits>10</initial-permits>
         </semaphore>
         <semaphore>
            <name>semaphore2</name>
            <initial-permits>20</initial-permits>
         </semaphore>
      </semaphores>
   </cp-subsystem>
</hazelcast>
